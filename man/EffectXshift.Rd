% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EffectXshift.R
\name{EffectXshift}
\alias{EffectXshift}
\title{EffectXshift}
\usage{
EffectXshift(
  w,
  a,
  y,
  deltas,
  estimator = "tmle",
  fluctuation = "standard",
  pi_learner = NULL,
  mu_learner = NULL,
  n_folds = 2,
  outcome_type = "continuous",
  parallel = TRUE,
  parallel_type = "multi_session",
  num_cores = 2,
  seed = seed,
  hn_trunc_thresh = 10,
  adaptive_delta = FALSE,
  top_n = 1,
  min_obs = 20
)
}
\arguments{
\item{w}{A \code{matrix}, \code{data.frame}, or similar containing a set of
baseline covariates. These variables are measured before exposures.}

\item{a}{\code{matrix}, \code{data.frame}, or similar containing individual or
multiple exposures.}

\item{y}{\code{numeric} vector of observed outcomes.}

\item{deltas}{A \code{numeric} value indicating the shift in exposures to
define the target parameter, with respect to the scale of the exposures (A). If adaptive_delta
is true, these values will be reduced.}

\item{estimator}{The type of estimator to fit: \code{"tmle"} for targeted
maximum likelihood estimation, or \code{"onestep"} for a one-step estimator.}

\item{fluctuation}{Method used in the targeting step for TML estimation: "standard" or "weighted".
This determines where to place the auxiliary covariate in the logistic tilting regression.}

\item{pi_learner}{Learners for fitting Super Learner ensembles to densities via \pkg{sl3}.}

\item{mu_learner}{Learners for fitting Super Learner ensembles to the outcome model via \pkg{sl3}.}

\item{n_folds}{Number of folds to use in cross-validation, default is 2.}

\item{outcome_type}{Data type of the outcome, default is "continuous".}

\item{parallel}{Whether to parallelize across cores (default: TRUE).}

\item{parallel_type}{Type of parallelization to use if parallel is TRUE:
"multi_session" (default), "multicore", or "sequential".}

\item{num_cores}{Number of CPU cores to use in parallelization (default: 2).}

\item{seed}{\code{numeric} seed value to be passed to all functions.}

\item{hn_trunc_thresh}{Truncation level for the clever covariate (default: 10).}

\item{adaptive_delta}{If TRUE, reduces the user-specified delta until}

\item{min_obs}{Minimum number of observations allowed in a covariate region
the Hn calculated for a shift does not have any observation greater
than hn_trunc_thresh (default: FALSE).}

\item{z}{\code{matrix}, \code{data.frame}, or similar containing individual or
multiple mediators (optional).}

\item{var_sets}{A list specifying variable sets for deterministic EffectXshift usage.
Example: var_sets <- c("A_1", "A_1-Z_2") where the analyst provides variable sets
for exposures, exposure-mediator, or exposure-covariate relationships.}

\item{g_learner}{Learners for fitting Super Learner ensembles to the g-mechanism
g(A|W) (a probability estimator, not a density estimator) for mediation via \pkg{sl3}.}

\item{e_learner}{Learners for fitting Super Learner ensembles to the e-mechanism
g(A|Z,W) (a probability estimator, not a density estimator) for mediation via \pkg{sl3}.}

\item{zeta_learner}{Learners for fitting Super Learner ensembles to the outcome model via \pkg{sl3}..}
}
\value{
An S3 object of class \code{EffectXshift} containing the results of the
procedure to compute a TML or one-step estimate of the counterfactual mean
under a modified treatment policy that shifts a continuous-valued exposure
by a scalar amount \code{delta} in subregions of the exposure space.
These exposures are data-adaptively identified using the CV-TMLE procedure.
}
\description{
This packages aims to find, in a mixed exposure with many covariates and a future outcome, the
exposure-covariate region combination that maximizes the differential impact of stochastic shift intervention. In a
training fold we find the region in the covariate space that maximizes the average difference in stochastic shift interventions,
compared between the regions. This outputs an exposure-covariate region pairing. Then in an estimation sample, we estimate
a stochastic shift intervention using targeted learning in each level of the covariate, shifting the discovered exposure.
This is done in a CV-TMLE procedure where each fold is used as validation and the complementary folds are used as training.
This package outputs the targeted estimates for the discovered exposure in the levels of the discovered covariate both at the k-fold
specific level and pooled across folds, which estimates the overall oracle parameter.
}
